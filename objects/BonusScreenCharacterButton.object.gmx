<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>bonusScreenCharacterButtonSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed=0;
playerOneSelected = false;
playerOneHighlighted=false;

playerTwoSelected = false;
playerTwoHighlighted=false;

spriteToDraw=Soldier;
hpVal = 0;
hpMax = 0;
moveVal = 0;
attackVal = 0;
defVal = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playerOneSelected==false &amp;&amp; playerOneHighlighted=false)
{
    image_index=0;
}
if(playerTwoSelected==false &amp;&amp; playerTwoHighlighted=false)
{
    image_index=0;
}

if(playerOneSelected==true)
{

    image_index=2;
}
if(playerTwoSelected==true){
    image_index=4;
}

if(playerOneHighlighted==true){
    image_index=1;
}


if(playerTwoHighlighted==true){
    image_index=3;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the character for the button
draw_self();

//draw sprite on button
spriteScale=sprite_get_width(self.sprite_index)-30;
draw_sprite_stretched(spriteToDraw, 0, self.x+15, self.y+10, spriteScale, spriteScale );


//Draw all text in button
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(players);
draw_set_color(c_black);

initX = x+sprite_get_width(self.sprite_index)/2;
initY = y+sprite_get_height(self.sprite_index)/2;

draw_text(initX,initY+10+5 ,"HP: "+string(hpVal)+"/"+string(hpMax)); //need to adjust placement
draw_text(initX, initY+12*2+5 ,"Movement: "+ string(moveVal) );
draw_text(initX, initY+12*3+5, "Attack: "+string(attackVal));
draw_text(initX, initY+12*4+5, "Defense?: "+string(defVal));





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
