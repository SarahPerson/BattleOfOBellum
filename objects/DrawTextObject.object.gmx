<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//determine scaling based on full screen/window
if (!window_get_fullscreen())
    {
    display_set_gui_maximise();
    surface_resize(application_surface, display_get_width(), display_get_height());
    }
else
    {

    display_set_gui_size(window_get_width(), window_get_height());
    surface_resize(application_surface, window_get_width(), window_get_height());
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables
oneCharacterSelectText="Select the bonus you would like to accept";
twoCharacterSelectText="Select the bonus you would like to accept";
splitScreenTitle="";

//level up menu
pOneLv=""
pTwoLv=""

//bonus screen 
pOneBonusDet = "Testing # testing # tEsTiNg ";
pTwoBonusDet = "Testing # testing # tEsTiNg ";

//split screen
splitDetailsOne = "";
splitDetailsTwo = "";
splitDetails = "";

//controls
pOne="";
pTwo="";
pOneControls="";
pTwoControls="";

//end splash screen
endText = ""
endDetails=""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go to room after ending splash screen
if(global.currentMap==0||global.currentMap==global.gameSize){
    global.currentMap=(global.gameSize+1)/2;
    room_goto(MainMenu);
}
else{
    room_goto(SplitScreen);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//determine character select text
if(room==BonusScreen){
    //player one
    if(PlayerOne.isSelectingCharacterForBonus)
        oneCharacterSelectText = "Select Character To Be Healed Completely"
    else if(!PlayerOne.isSelectingCharacterForBonus)
        oneCharacterSelectText = "";
        
    //player two
    if(PlayerTwo.isSelectingCharacterForBonus)
        twoCharacterSelectText = "Select Character To Be Healed Completely"
    else if(!PlayerTwo.isSelectingCharacterForBonus)
        twoCharacterSelectText = "";
        
        
    //show end of bonus selection sequence
    if(PlayerOne.selectedBonus &amp;&amp; !PlayerOne.isSelectingCharacterForBonus)
        oneCharacterSelectText = "Bonus Selected - Please Select Ready"
    else if(!PlayerOne.selectedBonus &amp;&amp; !PlayerOne.isSelectingCharacterForBonus)
        oneCharacterSelectText = "";
        
         
    if(PlayerTwo.selectedBonus &amp;&amp; !PlayerTwo.isSelectingCharacterForBonus  )
        twoCharacterSelectText = "Bonus Selected - Please Select Ready"
    else if(!PlayerTwo.selectedBonus &amp;&amp; !PlayerTwo.isSelectingCharacterForBonus)
        twoCharacterSelectText = "";
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///determine the details to go under split screen title
if(room==SplitScreen){
    if(global.setup){
        splitDetails= " Select characters to place them within the highlighted region"
    }
    else
    {
        splitDetails = "Select each character and choose their destination#Select ready when character destinations are chosen."
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///determine the details to go under split screen and players if bonus selected
if(room==SplitScreen){
    //if player one is getting the additions bonus
    if(global.setup &amp;&amp; global.PlayerWon==2){
        if(global.setFlag){
            splitDetailsOne = "BONUS: Select a tile on map to place flag"
        }
        else if(global.setWall){
            splitDetailsOne = "BONUS: Select a tile on map to place up to 5 walls"
        }
    }
    else if(global.setup &amp;&amp; global.PlayerWon==1){
        if(global.setFlag){
            splitDetailsTwo = "BONUS: Select a tile on map to place flag"
        }
        else if(global.setWall){
            splitDetailsTwo = "BONUS: Select a tile on map to place up to 5 walls"
        }
    }
    else
    {
        splitDetailsOne="";
        splitDetailsTwo="";
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///determine controls text
if(global.displayControls){
    pOne="Player One Controls: ";
    pOneControls="Move Cursor - 'Arrow Keys' #Select - 'Shift' #Enter - 'Enter' #Enter/Exit Menu - 'Page Up'  #Select Button In Menu - 'Enter'";
    
    pTwo="Player Two Controls: ";
    pTwoControls = "Move Cursor - 'W', 'A', 'S', and 'D' #Select - 'Alt' #Enter - 'Space' #Enter/Exit Menu - 'V' #Select Button In Menu - 'Space'";
}
else{
    pOne = "";
    pOneControls = "";
    pTwo="";
    pTwoControls = "";
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///determine text for end splash
if(global.PlayerWon ==1){
    endText = "Player One Reached The Objective";
    endDetails = "Moving to next map"
    
}
else if (global.PlayerWon ==2){
    endText = "Player Two Reached The Objective";
    endDetails = "Moving to next map"
}
else if (global.PlayerWon ==1 &amp;&amp; global.currentMap==0 &amp;&amp; global.currentMap == global.gameSize){
    endText = "Player One Won";
    endDetails = ""
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw instructions for player selecting character

//Draw all text in button
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);

//draw bonus screen stufffffs
if(room==BonusScreen){
    //create screen title
    draw_set_font(titles);
    draw_text(800,  25, "Select Team Bonuses");
    
    //Draw player one and two headers
    draw_set_font(headers);
    draw_text(400,  40, "Player Two");
    draw_text(1200,  40, "Player One");
    
    //draw instructions for selecting character to heal
    draw_set_font(standard);
    draw_text(300+800,600 , oneCharacterSelectText);
    draw_text(300,600 , twoCharacterSelectText);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text for settings menu
//Draw all text in button
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);

//draw bonus screen stufffffs
if(room==SettingsScreen){
    //create screen title
    draw_set_font(titles);
    draw_text(800,  50, "Game Settings");
    
    
    //draw titles of settings selection
    draw_set_font(standard);
    draw_text(1137, 191, "Select the number of characters you would like on your team");
    
    draw_text(1137, 191+160, "Select the size of the maps you would like to play on");
    
    draw_text(1137, 191+160*2, "Select the number of maps the game will include");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text for splitscreen
//Draw all text in button
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);

//draw all gui objects
if(room==SplitScreen){
    //create screen title
    draw_set_font(titles);
    draw_text(800,  30, splitScreenTitle);
    draw_set_valign(fa_top);
    draw_set_font(details);
    draw_text(800, 50, splitDetails);
    
    //draw players
    draw_set_valign(fa_middle);
    draw_set_font(player_title);
    draw_text(400,50, "Player Two");
    draw_text(1200,50, "Player One");
    //draw player details
    draw_set_valign(fa_top);
    draw_set_font(details);
    draw_text(400,65, splitDetailsTwo);
    draw_text(1200,65, splitDetailsOne);
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw text for level up screen
//Draw all text in button
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);

//draw all gui objects
if(room==LevelUpMenu){
    //create screen title
    draw_set_font(titles);
    draw_text(800,  50, "Level Up Characters");
    
    draw_set_font(headers);
    draw_text(1200,  100, "Player One");
    draw_text(400,  100, "Player Two");
    draw_text(1200, 200, "Level Up Points: "+pOneLv);
    draw_text(400, 200, "Level Up Points: "+pTwoLv);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw all info for bonus buttons
if(room==BonusScreen){
    draw_set_color(c_gray);
    
    //draw boxes to hold the bonus details
    draw_rectangle( 500, 75, 750 ,445 , false);
    draw_rectangle( 1300, 75, 1550 ,445 , false);
    
    //draw text for bonus details
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    
    draw_set_font(details_title);
    draw_set_color(c_black);
    draw_text(625, 90, "Bonus Details");
    draw_text(1425, 90, "Bonus Details");
    
    //draw the bonus details
    draw_set_font(details);
    draw_set_valign(fa_middle);
    draw_text(1425,260, pOneBonusDet);
    draw_text(625,260, pTwoBonusDet);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw drafting title and details
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);

if(room==Drafting){
    //create screen title
    draw_set_font(titles);
    draw_text(800,  30, "Drafting");
    draw_set_valign(fa_top);
    draw_set_font(details);
    draw_text(800, 50, "Take selecting character to be added to your team");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw controls
if(room=MainMenu){
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_color(c_black);
    
    draw_set_font(player_title);
    draw_text(785, 270, pOne);
    draw_text(1085, 270, pTwo);
    
    draw_set_font(standard);
    draw_text(785, 300, pOneControls);
    draw_text(1085, 300, pTwoControls);

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw text ending screen
if(room=EndSplashScreen){
    draw_set_halign(fa_center);
    draw_set_valign(fa_bottom);
    draw_set_color(c_black);
    
    draw_set_font(titles);
    draw_text(800, 450, endText);
    draw_set_valign(fa_top);
    draw_set_font(details);
    draw_text(800, 450, endDetails);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
